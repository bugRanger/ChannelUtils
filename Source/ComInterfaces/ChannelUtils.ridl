// ************************************************************************ //
// WARNING
// -------
// This file is generated by the Type Library importer or Type Libary Editor.
// Barring syntax errors, the Editor will parse modifications made to the file.
// However, when applying changes via the Editor this file will be regenerated
// and comments or formatting changes will be lost.
// ************************************************************************ //
// File generated on 17.05.2016 14:40:23 (- $Rev: 12980 $, 949473050).

[
  uuid(7992BFC5-ABE3-4242-816B-DA90AE41D75D),
  version(1.0),
  helpstring("SoftCaten interface ChannelUtils")

]
library ChannelUtils
{

  importlib("stdole2.tlb");

  interface ICoChannelUtils;
  interface ISession;
  interface IComPort;
  interface ISocket;
  dispinterface ICoChannelUtilsEvents;
  coclass CoChannelUtils;
  interface IReconnect;


  [
    uuid(EFB0A086-8E16-41A9-9BD4-CF503F0234CF)
  ]
  enum TByteSize
  {
    bs5 = 5,
    bs6 = 6,
    bs7 = 7,
    bs8 = 8
  };

  [
    uuid(A428A23D-5D8E-4CDD-9CC6-564C934F215D)
  ]
  enum TParity
  {
    ptNONE = 0,
    ptODD = 1,
    ptEVEN = 2,
    ptMARK = 3,
    ptSPASE = 4
  };

  [
    uuid(1C288D48-C454-4029-8B20-B559D542A628)
  ]
  enum TStopBits
  {
    sbONE = 0,
    sbONE5 = 1,
    sbTWO = 2
  };

  [
    uuid(B52FD6A2-CD5A-4552-AE66-6AE4733D2BC1)
  ]
  enum TPortKind
  {
    pkComPort = 0,
    pkSocket = 1
  };

  [
    uuid(A18AA8CA-16F4-4452-852C-3939FC9C5C1D)
  ]
  enum TResultExec
  {
    exGood = 0,
    exError = 1,
    exClose = 2
  };

  [
    uuid(D3B687E1-48C5-4DA2-88E8-781F5B34935B),
    helpstring("Dispatch interface for CoCannalUtils Object"),
    dual,
    oleautomation
  ]
  interface ICoChannelUtils: IDispatch
  {
    [id(0x000000C9)]
    HRESULT _stdcall Create([in] enum TPortKind AKind, [out]  IUnknown** AValue, [out, retval] VARIANT_BOOL* AResult);
  };

  [
    uuid(C5C46EE4-B117-44B4-A9B5-CB705C9FAC46),
    dual,
    oleautomation
  ]
  interface ISession: IDispatch
  {
    [propget, id(0x000000C9)]
    HRESULT _stdcall StartDT([out, retval] DATE* Value);
    [propget, id(0x000000CA)]
    HRESULT _stdcall FinishDT([out, retval] DATE* Value);
    [propget, id(0x000000CB)]
    HRESULT _stdcall Duration([out, retval] unsigned __int64* Value);
    [propget, id(0x000000CC)]
    HRESULT _stdcall Success([out, retval] unsigned __int64* Value);
    [propget, id(0x000000CD)]
    HRESULT _stdcall Fail([out, retval] unsigned __int64* Value);
  };

  [
    uuid(EF7B9287-2F23-4A8C-8876-36FF41A2B00C),
    dual,
    oleautomation
  ]
  interface IComPort: IDispatch
  {
    [propget, id(0x000000C9)]
    HRESULT _stdcall Number([out, retval] unsigned short* AValue);
    [propput, id(0x000000C9)]
    HRESULT _stdcall Number([in] unsigned short AValue);
    [propget, id(0x000000CA)]
    HRESULT _stdcall BaudRate([out, retval] unsigned short* AValue);
    [propput, id(0x000000CA)]
    HRESULT _stdcall BaudRate([in] unsigned short AValue);
    [propget, id(0x000000CB)]
    HRESULT _stdcall ByteSize([out, retval] enum TByteSize* AValue);
    [propput, id(0x000000CB)]
    HRESULT _stdcall ByteSize([in] enum TByteSize AValue);
    [propget, id(0x000000CC)]
    HRESULT _stdcall Parity([out, retval] enum TParity* AValue);
    [propput, id(0x000000CC)]
    HRESULT _stdcall Parity([in] enum TParity AValue);
    [propget, id(0x000000CD)]
    HRESULT _stdcall StopBits([out, retval] enum TStopBits* AValue);
    [propput, id(0x000000CD)]
    HRESULT _stdcall StopBits([in] enum TStopBits AValue);
    [propget, id(0x000000CE)]
    HRESULT _stdcall BufSize([out, retval] unsigned short* AValue);
    [propput, id(0x000000CE)]
    HRESULT _stdcall BufSize([in] unsigned short AValue);
    [propget, id(0x000000DB)]
    HRESULT _stdcall Reconnect([out, retval] IReconnect** Value);
    [propget, id(0x000000DA)]
    HRESULT _stdcall Session([out, retval] ISession** Value);
    [propget, id(0x000000CF)]
    HRESULT _stdcall ReadIntervalTimeout([out, retval] unsigned short* AValue);
    [propput, id(0x000000CF)]
    HRESULT _stdcall ReadIntervalTimeout([in] unsigned short AValue);
    [propget, id(0x000000D0)]
    HRESULT _stdcall ReadTotalTimeoutConstant([out, retval] unsigned short* AValue);
    [propput, id(0x000000D0)]
    HRESULT _stdcall ReadTotalTimeoutConstant([in] unsigned short AValue);
    [propget, id(0x000000D1)]
    HRESULT _stdcall ReadTotalTimeoutMultiplier([out, retval] unsigned short* AValue);
    [propput, id(0x000000D1)]
    HRESULT _stdcall ReadTotalTimeoutMultiplier([in] unsigned short AValue);
    [propget, id(0x000000D2)]
    HRESULT _stdcall WriteTotalTimeoutConstant([out, retval] unsigned short* AValue);
    [propput, id(0x000000D2)]
    HRESULT _stdcall WriteTotalTimeoutConstant([in] unsigned short AValue);
    [propget, id(0x000000D3)]
    HRESULT _stdcall WriteTotalTimeoutMultiplier([out, retval] unsigned short* AValue);
    [propput, id(0x000000D3)]
    HRESULT _stdcall WriteTotalTimeoutMultiplier([in] unsigned short AValue);
    [id(0x000000D4)]
    HRESULT _stdcall Open(void);
    [id(0x000000D5)]
    HRESULT _stdcall Close(void);
    [id(0x000000D9)]
    HRESULT _stdcall Connected([out, retval] VARIANT_BOOL* AResult);
    [id(0x000000D6)]
    HRESULT _stdcall Exchange([in] SAFEARRAY(long) AQuery, [out] SAFEARRAY(long) * AReturn, [out, retval] enum TResultExec* AResult);
    [id(0x000000D7)]
    HRESULT _stdcall Read([out] SAFEARRAY(long) * AReturn, [in, out] unsigned short* ABytesTrans, [in, out] unsigned short* AErrorCode, [out, retval] enum TResultExec* AResult);
    [id(0x000000D8)]
    HRESULT _stdcall Write([in] SAFEARRAY(long) AQuery, [in, out] unsigned short* ABytesTrans, [in, out] unsigned short* AErrorCode, [out, retval] enum TResultExec* AResult);
  };

  [
    uuid(788F821C-DC1E-4EDD-8FE6-B943A94131EA),
    dual,
    oleautomation
  ]
  interface ISocket: IDispatch
  {
    [propget, id(0x000000C9)]
    HRESULT _stdcall Host([out, retval] BSTR* AValue);
    [propput, id(0x000000C9)]
    HRESULT _stdcall Host([in] BSTR AValue);
    [propget, id(0x000000CA)]
    HRESULT _stdcall Port([out, retval] long* AValue);
    [propput, id(0x000000CA)]
    HRESULT _stdcall Port([in] long AValue);
    [propget, id(0x000000CB)]
    HRESULT _stdcall TotalTime([out, retval] unsigned short* AValue);
    [propput, id(0x000000CB)]
    HRESULT _stdcall TotalTime([in] unsigned short AValue);
    [propget, id(0x000000CC)]
    HRESULT _stdcall ReactivateTime([out, retval] __int64* Value);
    [propput, id(0x000000CC)]
    HRESULT _stdcall ReactivateTime([in] __int64 Value);
    [propget, id(0x000000CE)]
    HRESULT _stdcall Reconnect([out, retval] IReconnect** Value);
    [propget, id(0x000000CD)]
    HRESULT _stdcall Session([out, retval] ISession** Value);
    [id(0x000000D4)]
    HRESULT _stdcall Open(void);
    [id(0x000000D5)]
    HRESULT _stdcall Close(void);
    [id(0x000000D9)]
    HRESULT _stdcall Connected([out, retval] VARIANT_BOOL* AResult);
    [id(0x000000D6)]
    HRESULT _stdcall Exchange([in] SAFEARRAY(long) AQuery, [out] SAFEARRAY(long) * AReturn, [out, retval] enum TResultExec* AResult);
    [id(0x000000D7)]
    HRESULT _stdcall Read([out] SAFEARRAY(long) * AReturn, [in, out] unsigned short* ABytesTrans, [in, out] unsigned short* AErrorCode, [out, retval] enum TResultExec* AResult);
    [id(0x000000D8)]
    HRESULT _stdcall Write([in] SAFEARRAY(long) AQuery, [in, out] unsigned short* ABytesTrans, [in, out] unsigned short* AErrorCode, [out, retval] enum TResultExec* AResult);
  };

  [
    uuid(DCBA7ACB-CA98-47CF-9620-47E66FBF6F53),
    dual,
    oleautomation
  ]
  interface IReconnect: IDispatch
  {
    [propget, id(0x000000C9)]
    HRESULT _stdcall Attempts([out, retval] unsigned __int64* AValue);
    [propput, id(0x000000C9)]
    HRESULT _stdcall Attempts([in] unsigned __int64 AValue);
    [propget, id(0x000000CA)]
    HRESULT _stdcall Interval([out, retval] unsigned __int64* AValue);
    [propput, id(0x000000CA)]
    HRESULT _stdcall Interval([in] unsigned __int64 AValue);
  };

  [
    uuid(1F94FBFD-0AEF-4C39-ABCC-B1F1C41CB3E0),
    helpstring("Events interface for CoChannelUtils Object")
  ]
  dispinterface ICoChannelUtilsEvents
  {
    properties:
    methods:
    [id(0x000000C9)]
    HRESULT OnExchange([in] SAFEARRAY(long) AQuery, [in] SAFEARRAY(long) AReturn, [in] enum TResultExec AResult);
    [id(0x000000CA)]
    HRESULT OnWrite([in] SAFEARRAY(long) AQuery, [in] unsigned short ABytesTrans, [in] unsigned short AErrorCode, [in] enum TResultExec AResult);
    [id(0x000000CB)]
    HRESULT OnRead([in] SAFEARRAY(long) AReturn, [in] unsigned short ABytesTrans, [in] unsigned short AErrorCode, [in] enum TResultExec AResult);
    [id(0x000000CC)]
    HRESULT OnError([in] VARIANT AGUID, [in] BSTR AText, [in] BSTR AMessage);
    [id(0x000000CD)]
    HRESULT OnInfo([in] VARIANT AGUID, [in] BSTR AMessage);
  };

  [
    uuid(74C42692-DB68-4FB8-953A-5B278CD55419),
    helpstring("CoChannelUtils Object")
  ]
  coclass CoChannelUtils
  {
    [default] interface ICoChannelUtils;
    [default, source] dispinterface ICoChannelUtilsEvents;
  };

};
